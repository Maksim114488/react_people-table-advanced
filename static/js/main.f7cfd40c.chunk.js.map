{"version":3,"sources":["utils/searchHelper.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","types/SortBy.ts","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","services/filterPeople.tsx","components/Navbar.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleFilters","useSearchParams","searchParams","setSearchParams","query","get","sex","centuries","getAll","className","cn","to","search","type","placeholder","onChange","event","params","setSearchWith","target","map","century","includes","filter","cent","href","Loader","PersonLink","person","pathname","slug","name","SortBy","PeopleTable","people","useParams","sort","order","sortedPeople","isReversed","a","b","localeCompare","sortPeople","keys","sortName","column","toLowerCase","mother","find","person2","motherName","father","fatherName","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loading","setLoading","errorMessage","setErrorMessage","filteredPeople","length","Math","ceil","filterPeople","useEffect","getPeople","catch","finally","getLinkClass","isActive","Navbar","role","HomePage","NotFoundPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f7cfd40c.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // | URLSearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n\n  const centuries = searchParams.getAll('centuries') || [];\n  const allCenturies = [16, 17, 18, 19, 20];\n\n  const setSearchWith = (params: SearchParams) => {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value || null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={cn({ 'is-active': !sex })}\n          to={{\n            search: getSearchWith(searchParams, { sex: null }),\n          }}\n        >\n          All\n        </Link>\n\n        <Link\n          className={cn({ 'is-active': sex === 'm' })}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'm' }),\n          }}\n        >\n          Male\n        </Link>\n\n        <Link\n          className={cn({ 'is-active': sex === 'f' })}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'f' }),\n          }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleInputChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {allCenturies.map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century.toString()),\n                })}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: centuries.includes(century.toString())\n                      ? centuries.filter(cent => +cent !== century)\n                      : [...centuries, century.toString()],\n                  }),\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              to={{ search: getSearchWith(searchParams, { centuries: [] }) }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `${person.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import cn from 'classnames';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SortBy } from '../types/SortBy';\n\ntype Props = {\n  people: Person[];\n};\n\nconst sortPeople = (\n  people: Person[],\n  sort: string | null,\n  order: string | null,\n): Person[] => {\n  const isReversed: number = order ? -1 : 1;\n\n  return [...people].sort((a, b) => {\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        return (a[sort] as string).localeCompare(b[sort]) * isReversed;\n      case 'born':\n      case 'died':\n        return (+a[sort] - +b[sort]) * isReversed;\n      default:\n        return 0;\n    }\n  });\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n  const sortedPeople: Person[] = sortPeople(people, sort, order);\n\n  const sortByColumn = (column: string) => {\n    if (sort !== column) {\n      return { sort: column, order: null };\n    }\n\n    if (!order) {\n      return { sort: column, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.keys(SortBy).map((sortName: string) => (\n            <th key={sortName}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortName}\n                <Link to={{\n                  search: getSearchWith(\n                    searchParams,\n                    sortByColumn(sortName.toLowerCase()),\n                  ),\n                }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('fas fa-sort', {\n                      'fa-sort-up': sort === sortName.toLowerCase() && !order,\n                      'fa-sort-down': sort === sortName.toLowerCase() && order,\n                    })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map((person: Person) => {\n          const mother = people\n            .find(person2 => person.motherName === person2.name);\n          const father = people\n            .find(person2 => person.fatherName === person2.name);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n              <td>\n                {father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  person.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { filterPeople } from '../services/filterPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const filteredPeople = filterPeople(people, query, sex, centuries);\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loading ? <Loader /> : (\n                <>\n                  {errorMessage && (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      {errorMessage}\n                    </p>\n                  )}\n                  {!people.length && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                  {people.length && !filteredPeople.length && (\n                    <p>\n                      There are no people matching the current search criteria\n                    </p>\n                  )}\n                  {filteredPeople.length > 0 && (\n                    <PeopleTable people={filteredPeople} />\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function filterPeople(\n  people: Person[],\n  query: string,\n  sex: string,\n  centuries: string[],\n) {\n  let filteredPeople = [...people];\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(person => centuries\n      .includes(Math.ceil(person.born / 100).toString()));\n  }\n\n  if (query) {\n    filteredPeople = filteredPeople.filter(person => person.name.toLowerCase()\n      .includes(query.toLowerCase())\n      || person.motherName?.toLowerCase()\n        .includes(query.toLowerCase())\n      || person.fatherName?.toLowerCase()\n        .includes(query.toLowerCase()));\n  }\n\n  return filteredPeople;\n}\n","import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  cn('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  })\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":slug\" />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}